Index: src/main/java/ir/oopjdbcgeneric/base/repository/BaseEntityRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ir.oopjdbcgeneric.base.repository;\r\n\r\npublic interface BaseEntityRepository {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/base/repository/BaseEntityRepository.java b/src/main/java/ir/oopjdbcgeneric/base/repository/BaseEntityRepository.java
--- a/src/main/java/ir/oopjdbcgeneric/base/repository/BaseEntityRepository.java	(revision 9c6ea174e2b8954aee2f08e1613363c6d43146ec)
+++ b/src/main/java/ir/oopjdbcgeneric/base/repository/BaseEntityRepository.java	(date 1696174996134)
@@ -1,4 +1,12 @@
 package ir.oopjdbcgeneric.base.repository;
 
-public interface BaseEntityRepository {
+import ir.oopjdbcgeneric.base.domain.BaseEntity;
+
+import java.io.Serializable;
+import java.sql.SQLException;
+
+@SuppressWarnings("unused")
+public interface BaseEntityRepository<ID extends Serializable,TYPE extends BaseEntity<ID>> {
+    void Save(TYPE entity) throws SQLException;
+
 }
Index: src/main/java/ir/oopjdbcgeneric/menu/BaseMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/menu/BaseMenu.java b/src/main/java/ir/oopjdbcgeneric/menu/BaseMenu.java
new file mode 100644
--- /dev/null	(date 1696241135804)
+++ b/src/main/java/ir/oopjdbcgeneric/menu/BaseMenu.java	(date 1696241135804)
@@ -0,0 +1,104 @@
+package ir.oopjdbcgeneric.menu;
+
+
+import ir.oopjdbcgeneric.domain.User;
+import ir.oopjdbcgeneric.service.ShoppingCartService;
+import ir.oopjdbcgeneric.service.UserService;
+import ir.oopjdbcgeneric.util.ApplicationContex;
+import ir.oopjdbcgeneric.util.Validation;
+
+import java.sql.SQLException;
+import java.util.Scanner;
+
+@SuppressWarnings("unused")
+public class BaseMenu {
+    protected final Scanner scanner = new Scanner(System.in);
+    protected final UserService userService = ApplicationContex.getUserServiceImpl();
+    protected final ShoppingCartService shoppingCartService = ApplicationContex.getShoppingCatServiceImpl();
+    ShoppingMenu shoppingMenu =new ShoppingMenu();
+
+    public void fistMenu() throws SQLException {
+        Scanner scanner = new Scanner(System.in);
+        System.out.println("\n***********************************************");
+        System.out.println("|          WELCOMT TO ONLINE SHOP             |");
+        System.out.println("***********************************************\n");
+        System.out.println("1- Sign in");
+        System.out.println("2- Sign up");
+        System.out.println("3- Exit\n");
+        System.out.println("Enter your select:");
+        int select = scanner.nextInt();
+        scanner.nextLine();
+        switch (select) {
+            case 1 -> shoppingMenu.login();
+            case 2 -> signup();
+            case 3 -> System.out.println("exit");
+            default -> System.out.println("---Eror404---");
+        }
+    }
+
+    public void signup() throws SQLException {
+        System.out.println("Enter firstName :  ");
+        String firstName = scanner.next();
+        System.out.println("Enter lastName : ");
+        String lastName = scanner.next();
+        System.out.println("Enter username : ");
+        String username = scanner.next();
+        System.out.println("Enter password : ");
+        String password;
+        password =validationPassword();
+        System.out.println("Enter email : ");
+        String email;
+        email =validationEmail();
+        System.out.println("Enter MobileNumber : ");
+        String mobileNumber;
+        mobileNumber =validationMoblieNumber();
+        User<Integer> user = new User<>(null, firstName, lastName, username, password, email, mobileNumber);
+        userService.Save(user);
+        System.out.println("ADD to DataBase SUCESSFULLY");
+
+    }
+
+    public String validationPassword() {
+        String password=null;
+        boolean isTrue = true;
+        while (isTrue) {
+            password = scanner.next();
+            if (Validation.validatonPassword(password)) {
+                isTrue = false;
+            } else {
+                System.out.println("Enter valid password!!!!");
+            }
+        }
+        return password;
+    }
+
+    public String validationEmail() {
+        String email=null;
+        boolean isTrue = true;
+        while (isTrue) {
+            email = scanner.next();
+            if (Validation.validaitonEmail(email)) {
+                isTrue = false;
+            } else {
+                System.out.println("Enter validation Email!!!!");
+            }
+        }
+        return email;
+    }
+
+    public String validationMoblieNumber() {
+        String mobileNumber=null;
+        boolean isTrue = true;
+        while (isTrue) {
+            mobileNumber = scanner.next();
+            if (Validation.validationMobileNumber(mobileNumber)) {
+                isTrue = false;
+            } else {
+                System.out.println("Enter validation MobileNumber!!!!");
+            }
+        }
+        return mobileNumber;
+    }
+}
+
+
Index: src/main/java/ir/oopjdbcgeneric/repository/impl/ShoppingCartRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/repository/impl/ShoppingCartRepositoryImpl.java b/src/main/java/ir/oopjdbcgeneric/repository/impl/ShoppingCartRepositoryImpl.java
new file mode 100644
--- /dev/null	(date 1696267747095)
+++ b/src/main/java/ir/oopjdbcgeneric/repository/impl/ShoppingCartRepositoryImpl.java	(date 1696267747095)
@@ -0,0 +1,88 @@
+package ir.oopjdbcgeneric.repository.impl;
+
+import ir.oopjdbcgeneric.base.repository.impl.BaseEntityRepositoryImpl;
+import ir.oopjdbcgeneric.domain.ShoppingCart;
+import ir.oopjdbcgeneric.repository.ShoppingCartRepository;
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.util.ArrayList;
+import java.util.List;
+
+@SuppressWarnings("unnused")
+public class ShoppingCartRepositoryImpl extends BaseEntityRepositoryImpl<Integer, ShoppingCart<Integer>>
+        implements ShoppingCartRepository {
+
+
+    public ShoppingCartRepositoryImpl(Connection connection) {
+        super(connection);
+    }
+
+    @Override
+    protected void fillParamForStatement(PreparedStatement preparedStatement, ShoppingCart<Integer> entity, boolean isCart) throws SQLException {
+        preparedStatement.setString(1,entity.getProductName());
+        preparedStatement.setDouble(2,entity.getPrice());
+
+    }
+
+    @Override
+    protected String getCountOfQuestionMarkForParams() {
+        return "(?,?)";
+    }
+
+    @Override
+    protected String getColumnName() {
+        return "(productName,price)";
+    }
+
+    @Override
+    protected String getTableName() {
+        return "shoppingCart";
+    }
+
+    @Override
+    public void delete(Integer id) throws SQLException {
+        String sql="DELETE FROM shoppingcart where id=?";
+        try(PreparedStatement preparedStatement = getConnection().prepareStatement(sql)) {
+            preparedStatement.setInt(1,id);
+            preparedStatement.executeUpdate();
+        }
+
+    }
+
+    @Override
+    public List<ShoppingCart> countAllList() throws SQLException {
+        String sql = "SELECT Count(id) as count ,productname ,price FROM shoppingcart GROUP BY productname, price";
+        try (PreparedStatement preparedStatement = getConnection().prepareStatement(sql)) {
+            ResultSet resultSet = preparedStatement.executeQuery();
+            List<ShoppingCart> entities = new ArrayList<>();
+
+            while (resultSet.next()) {
+                entities.add(mapResultSetToEntity(resultSet));
+            }
+            return entities;
+        }
+    }
+
+    private ShoppingCart<Integer> mapResultSetToEntity(ResultSet resultSet) throws SQLException {
+        int count = resultSet.getInt("count");
+        String productName = resultSet.getString("productname");
+        double price = resultSet.getDouble("price");
+        return new ShoppingCart<>(null, productName, price,count);
+    }
+
+    @Override
+    public int sumPriceList() throws SQLException {
+        String sql="SELECT SUM(price) FROM shoppingcart";
+        PreparedStatement preparedStatement = getConnection().prepareStatement(sql);
+       ResultSet resultset =preparedStatement.executeQuery();
+       int result=0;
+       while (resultset.next()){
+           result =resultset.getInt(1);
+       }
+
+        return result;
+    }
+}
Index: src/main/java/ir/oopjdbcgeneric/menu/ShoppingMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/menu/ShoppingMenu.java b/src/main/java/ir/oopjdbcgeneric/menu/ShoppingMenu.java
new file mode 100644
--- /dev/null	(date 1696269205252)
+++ b/src/main/java/ir/oopjdbcgeneric/menu/ShoppingMenu.java	(date 1696269205252)
@@ -0,0 +1,138 @@
+package ir.oopjdbcgeneric.menu;
+
+import ir.oopjdbcgeneric.domain.ShoppingCart;
+import ir.oopjdbcgeneric.domain.User;
+import ir.oopjdbcgeneric.domain.enumeration.ElectricApplianceType;
+import ir.oopjdbcgeneric.domain.enumeration.ShoesType;
+import ir.oopjdbcgeneric.service.ShoppingCartService;
+import ir.oopjdbcgeneric.service.UserService;
+import ir.oopjdbcgeneric.util.ApplicationContex;
+
+import java.sql.SQLException;
+import java.util.Scanner;
+
+
+public class ShoppingMenu {
+    protected final Scanner scanner = new Scanner(System.in);
+    protected final UserService userService = ApplicationContex.getUserServiceImpl();
+    protected final ShoppingCartService shoppingCartService = ApplicationContex.getShoppingCatServiceImpl();
+
+    public void login() throws SQLException {
+        System.out.println("Enter username :");
+        String userName = scanner.next();
+        System.out.println("Enter Password : ");
+        String password = scanner.next();
+        User user = userService.login(userName);
+        if (user != null && !user.getPassword().equals(password)) {
+            System.out.println("you enter a username and password incorrect!!!");
+        } else {
+            boolean isBolean = true;
+            while (isBolean) {
+                System.out.println("---------** ShoppingCart **-------\n");
+                System.out.println("1. SHOW All product ");
+                System.out.println("2. ADD product in ShoppingCart ");
+                System.out.println("3. Print list of ShoppingCart ");
+                System.out.println("4. Print the total prices of shopping cart items  ");
+                System.out.println("5. REMOVE product from ShoppingCart");
+                System.out.println("6. Exit \n");
+                System.out.println("Enter your select :");
+                int select = scanner.nextInt();
+                scanner.nextLine();
+                switch (select) {
+                    case 1:
+                        showAllProduct();
+                    case 2:
+                        saveShoppingCart();
+                    case 3:
+                        printList();
+                        break;
+                    case 4:
+                        sum();
+                        break;
+                    case 5:
+                        deleteShoppingCart();
+                    case 6:
+                        System.out.println("----Good Bye---");
+                        break;
+                    default:
+                        System.out.println("-----Error404----");
+                        isBolean = false;
+
+                }
+            }
+        }
+    }
+
+    public void showAllProduct() {
+        ElectricApplianceType[] array = ElectricApplianceType.values();
+        System.out.println("-ElectricApplianceType Product-");
+        System.out.println("Product     |        Price");
+        System.out.println("--------------------------");
+        for (ElectricApplianceType type : array) {
+            System.out.println(type.getName() + "              " + type.getPrice());
+        }
+        System.out.println();
+        ShoesType[] arrays = ShoesType.values();
+        System.out.println("---- ShoesType Product---");
+        System.out.println("Product      |      Price");
+        System.out.println("-------------------------");
+        for (ShoesType type : arrays) {
+            System.out.println(type.getName() + "              " + type.getPrice());
+        }
+        System.out.println();
+
+    }
+
+    public void saveShoppingCart() throws SQLException {
+        System.out.println("1. ElectricAppliance");
+        System.out.println("2. Shoes");
+        System.out.println("Enter your Select :");
+        int select = scanner.nextInt();
+        scanner.nextLine();
+        switch (select) {
+            case 1:
+                System.out.println("--ElectricAppliance--");
+                System.out.println("Enter Product Name :");
+                String productName = scanner.next();
+                if (productName.equals("null")){
+                    break;
+                }else {
+                ElectricApplianceType type = ElectricApplianceType.valueOf(productName);
+                double price = type.getPrice();
+                ShoppingCart<Integer> shoppingCart = new ShoppingCart<>(null, productName, price);
+                shoppingCartService.Save(shoppingCart);}
+            case 2:
+                System.out.println("----Shoes---");
+                System.out.println("Enter Product Name :");
+                String productName1 = scanner.next();
+                if (productName1.equals("null")){
+                    break;
+                }else {
+                    ShoesType type1 = ShoesType.valueOf(productName1);
+                    double price1 = type1.getPrice();
+                    ShoppingCart<Integer> shoppingCartt = new ShoppingCart<>(null, productName1, price1);
+                    shoppingCartService.Save(shoppingCartt);
+                    break;
+                }
+            default:
+                System.out.println("Error");
+        }
+        System.out.println("ADD To ShoppingCart");
+    }
+
+    public void printList() throws SQLException {
+        System.out.println(shoppingCartService.countAllList());
+    }
+
+    public void sum() throws SQLException {
+        shoppingCartService.sumPriceList();
+    }
+
+    public void deleteShoppingCart() throws SQLException {
+        System.out.println("REMOVE product from ShoppingCart");
+        System.out.println("Enter ID product:");
+        int id = scanner.nextInt();
+        shoppingCartService.delete(id);
+    }
+
+}
Index: src/main/java/ir/oopjdbcgeneric/base/repository/impl/BaseEntityRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ir.oopjdbcgeneric.base.repository.impl;\r\n\r\npublic class BaseEntityRepositoryImpl {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/base/repository/impl/BaseEntityRepositoryImpl.java b/src/main/java/ir/oopjdbcgeneric/base/repository/impl/BaseEntityRepositoryImpl.java
--- a/src/main/java/ir/oopjdbcgeneric/base/repository/impl/BaseEntityRepositoryImpl.java	(revision 9c6ea174e2b8954aee2f08e1613363c6d43146ec)
+++ b/src/main/java/ir/oopjdbcgeneric/base/repository/impl/BaseEntityRepositoryImpl.java	(date 1696241653521)
@@ -1,4 +1,39 @@
 package ir.oopjdbcgeneric.base.repository.impl;
 
-public class BaseEntityRepositoryImpl {
+import ir.oopjdbcgeneric.base.domain.BaseEntity;
+import ir.oopjdbcgeneric.base.repository.BaseEntityRepository;
+import lombok.Getter;
+
+import java.io.Serializable;
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.SQLException;
+
+@SuppressWarnings("unused")
+@Getter
+public abstract class BaseEntityRepositoryImpl<ID extends Serializable,TYPE extends BaseEntity<ID>> implements BaseEntityRepository<ID,TYPE> {
+
+    private final Connection connection;
+    public BaseEntityRepositoryImpl(Connection connection) {
+        this.connection=connection;
+    }
+
+    @Override
+    public void Save(TYPE entity) throws SQLException {
+        String sql ="INSERT INTO " + getTableName() + "  " + getColumnName() + " VALUES " +  getCountOfQuestionMarkForParams() ;
+       try (PreparedStatement statement =connection.prepareStatement(sql)){
+           fillParamForStatement(statement, entity, false);
+           statement.executeUpdate();
+       }catch (Exception e){
+           e.printStackTrace();
+       }
+    }
+
+    protected abstract void fillParamForStatement(PreparedStatement preparedStatement, TYPE entity, boolean isCart) throws SQLException;
+
+    protected abstract String getCountOfQuestionMarkForParams();
+
+    protected abstract String getColumnName();
+
+    protected abstract String getTableName();
 }
Index: src/main/java/ir/oopjdbcgeneric/base/service/impl/BaseEntityServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ir.oopjdbcgeneric.base.service.impl;\r\n\r\npublic class BaseEntityServiceImpl {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/base/service/impl/BaseEntityServiceImpl.java b/src/main/java/ir/oopjdbcgeneric/base/service/impl/BaseEntityServiceImpl.java
--- a/src/main/java/ir/oopjdbcgeneric/base/service/impl/BaseEntityServiceImpl.java	(revision 9c6ea174e2b8954aee2f08e1613363c6d43146ec)
+++ b/src/main/java/ir/oopjdbcgeneric/base/service/impl/BaseEntityServiceImpl.java	(date 1696179980928)
@@ -1,4 +1,23 @@
 package ir.oopjdbcgeneric.base.service.impl;
 
-public class BaseEntityServiceImpl {
+import ir.oopjdbcgeneric.base.domain.BaseEntity;
+import ir.oopjdbcgeneric.base.repository.BaseEntityRepository;
+import ir.oopjdbcgeneric.base.service.BaseEntityService;
+
+import java.io.Serializable;
+import java.sql.SQLException;
+
+public class BaseEntityServiceImpl<ID extends Serializable, TYPE extends BaseEntity<ID>,
+        R extends BaseEntityRepository<ID, TYPE>> implements BaseEntityService<ID, TYPE> {
+
+    protected R repository;
+
+    public BaseEntityServiceImpl(R repository) {
+        this.repository = repository;
+    }
+
+    @Override
+    public void Save(TYPE entity) throws SQLException {
+        repository.Save(entity);
+    }
 }
Index: src/main/java/ir/oopjdbcgeneric/base/service/BaseEntityService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ir.oopjdbcgeneric.base.service;\r\n\r\npublic interface BaseEntityService {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/base/service/BaseEntityService.java b/src/main/java/ir/oopjdbcgeneric/base/service/BaseEntityService.java
--- a/src/main/java/ir/oopjdbcgeneric/base/service/BaseEntityService.java	(revision 9c6ea174e2b8954aee2f08e1613363c6d43146ec)
+++ b/src/main/java/ir/oopjdbcgeneric/base/service/BaseEntityService.java	(date 1696179980936)
@@ -1,4 +1,10 @@
 package ir.oopjdbcgeneric.base.service;
 
-public interface BaseEntityService {
+import ir.oopjdbcgeneric.base.domain.BaseEntity;
+
+import java.io.Serializable;
+import java.sql.SQLException;
+
+public interface BaseEntityService<ID extends Serializable ,TYPE extends BaseEntity<ID>>{
+    void Save(TYPE entity) throws SQLException;
 }
Index: src/main/java/ir/oopjdbcgeneric/service/UserService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/service/UserService.java b/src/main/java/ir/oopjdbcgeneric/service/UserService.java
new file mode 100644
--- /dev/null	(date 1696236366340)
+++ b/src/main/java/ir/oopjdbcgeneric/service/UserService.java	(date 1696236366340)
@@ -0,0 +1,10 @@
+package ir.oopjdbcgeneric.service;
+
+import ir.oopjdbcgeneric.base.service.BaseEntityService;
+import ir.oopjdbcgeneric.domain.User;
+
+import java.sql.SQLException;
+
+public interface UserService extends BaseEntityService<Integer, User<Integer>> {
+    User login(String username) throws SQLException;
+}
Index: src/main/java/ir/oopjdbcgeneric/service/ShoppingCartService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/service/ShoppingCartService.java b/src/main/java/ir/oopjdbcgeneric/service/ShoppingCartService.java
new file mode 100644
--- /dev/null	(date 1696264495740)
+++ b/src/main/java/ir/oopjdbcgeneric/service/ShoppingCartService.java	(date 1696264495740)
@@ -0,0 +1,16 @@
+package ir.oopjdbcgeneric.service;
+
+import ir.oopjdbcgeneric.base.service.BaseEntityService;
+import ir.oopjdbcgeneric.domain.ShoppingCart;
+
+import java.sql.SQLException;
+import java.util.List;
+@SuppressWarnings("unused")
+public interface ShoppingCartService extends BaseEntityService<Integer, ShoppingCart<Integer>> {
+    void delete(Integer id) throws SQLException;
+
+    List<ShoppingCart> countAllList() throws SQLException;
+
+    void sumPriceList() throws SQLException;
+
+}
Index: src/main/java/ir/oopjdbcgeneric/repository/UserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/repository/UserRepository.java b/src/main/java/ir/oopjdbcgeneric/repository/UserRepository.java
new file mode 100644
--- /dev/null	(date 1696177545782)
+++ b/src/main/java/ir/oopjdbcgeneric/repository/UserRepository.java	(date 1696177545782)
@@ -0,0 +1,11 @@
+package ir.oopjdbcgeneric.repository;
+
+import ir.oopjdbcgeneric.base.repository.BaseEntityRepository;
+import ir.oopjdbcgeneric.domain.User;
+
+import java.sql.SQLException;
+
+public interface UserRepository extends BaseEntityRepository<Integer, User<Integer>> {
+    User login(String username) throws SQLException;
+
+}
Index: src/main/java/ir/oopjdbcgeneric/service/impl/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/service/impl/UserServiceImpl.java b/src/main/java/ir/oopjdbcgeneric/service/impl/UserServiceImpl.java
new file mode 100644
--- /dev/null	(date 1696236366353)
+++ b/src/main/java/ir/oopjdbcgeneric/service/impl/UserServiceImpl.java	(date 1696236366353)
@@ -0,0 +1,22 @@
+package ir.oopjdbcgeneric.service.impl;
+
+import ir.oopjdbcgeneric.base.service.impl.BaseEntityServiceImpl;
+import ir.oopjdbcgeneric.domain.User;
+import ir.oopjdbcgeneric.repository.UserRepository;
+import ir.oopjdbcgeneric.service.UserService;
+
+import java.sql.SQLException;
+import java.util.Scanner;
+
+public class UserServiceImpl extends BaseEntityServiceImpl<Integer, User<Integer>,UserRepository> implements UserService {
+private final Scanner scanner =new Scanner(System.in);
+
+    public UserServiceImpl(UserRepository userRepository) {
+        super(userRepository);
+    }
+
+    @Override
+    public User login(String username) throws SQLException {
+       return repository.login(username);
+    }
+}
Index: src/main/java/ir/oopjdbcgeneric/repository/ShoppingCartRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/repository/ShoppingCartRepository.java b/src/main/java/ir/oopjdbcgeneric/repository/ShoppingCartRepository.java
new file mode 100644
--- /dev/null	(date 1696267113694)
+++ b/src/main/java/ir/oopjdbcgeneric/repository/ShoppingCartRepository.java	(date 1696267113694)
@@ -0,0 +1,20 @@
+package ir.oopjdbcgeneric.repository;
+
+import ir.oopjdbcgeneric.base.repository.BaseEntityRepository;
+import ir.oopjdbcgeneric.domain.ShoppingCart;
+
+import java.sql.SQLException;
+import java.util.List;
+
+
+@SuppressWarnings("unused")
+public interface ShoppingCartRepository extends BaseEntityRepository<Integer, ShoppingCart<Integer>> {
+
+    void delete(Integer id) throws SQLException;
+
+    List<ShoppingCart> countAllList() throws SQLException;
+
+    int sumPriceList() throws SQLException;
+
+
+}
Index: src/main/java/ir/oopjdbcgeneric/ApplicationOopJdbcGenerics.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/ApplicationOopJdbcGenerics.java b/src/main/java/ir/oopjdbcgeneric/ApplicationOopJdbcGenerics.java
new file mode 100644
--- /dev/null	(date 1696239308403)
+++ b/src/main/java/ir/oopjdbcgeneric/ApplicationOopJdbcGenerics.java	(date 1696239308403)
@@ -0,0 +1,13 @@
+package ir.oopjdbcgeneric;
+
+import ir.oopjdbcgeneric.menu.BaseMenu;
+
+import java.sql.SQLException;
+
+public class ApplicationOopJdbcGenerics {
+    public static void main(String[] args) throws SQLException {
+        BaseMenu baseMenu =new BaseMenu();
+        baseMenu.fistMenu();
+
+    }
+}
Index: src/main/java/ir/oopjdbcgeneric/service/impl/ShoppingCartServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/service/impl/ShoppingCartServiceImpl.java b/src/main/java/ir/oopjdbcgeneric/service/impl/ShoppingCartServiceImpl.java
new file mode 100644
--- /dev/null	(date 1696268936671)
+++ b/src/main/java/ir/oopjdbcgeneric/service/impl/ShoppingCartServiceImpl.java	(date 1696268936671)
@@ -0,0 +1,30 @@
+package ir.oopjdbcgeneric.service.impl;
+
+import ir.oopjdbcgeneric.base.service.impl.BaseEntityServiceImpl;
+import ir.oopjdbcgeneric.domain.ShoppingCart;
+import ir.oopjdbcgeneric.repository.ShoppingCartRepository;
+import ir.oopjdbcgeneric.service.ShoppingCartService;
+
+import java.sql.SQLException;
+import java.util.List;
+
+public class ShoppingCartServiceImpl extends BaseEntityServiceImpl<Integer, ShoppingCart<Integer>, ShoppingCartRepository> implements ShoppingCartService {
+    public ShoppingCartServiceImpl(ShoppingCartRepository repository) {
+        super(repository);
+    }
+
+    @Override
+    public void delete(Integer id) throws SQLException {
+        repository.delete(id);
+    }
+
+    @Override
+    public List<ShoppingCart> countAllList() throws SQLException {
+        return repository.countAllList();
+    }
+
+    @Override
+    public void sumPriceList() throws SQLException {
+        System.out.println("Print the total prices of shopping cart items : "+repository.sumPriceList()+"\n");
+    }
+}
Index: src/main/java/ir/oopjdbcgeneric/repository/impl/UserRepositoryImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/repository/impl/UserRepositoryImpl.java b/src/main/java/ir/oopjdbcgeneric/repository/impl/UserRepositoryImpl.java
new file mode 100644
--- /dev/null	(date 1696242285312)
+++ b/src/main/java/ir/oopjdbcgeneric/repository/impl/UserRepositoryImpl.java	(date 1696242285312)
@@ -0,0 +1,70 @@
+package ir.oopjdbcgeneric.repository.impl;
+
+import ir.oopjdbcgeneric.base.repository.impl.BaseEntityRepositoryImpl;
+import ir.oopjdbcgeneric.domain.User;
+import ir.oopjdbcgeneric.repository.UserRepository;
+
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+
+
+public class UserRepositoryImpl extends BaseEntityRepositoryImpl<Integer, User<Integer>>
+        implements UserRepository {
+
+    public UserRepositoryImpl(Connection connection) {
+        super(connection);
+    }
+
+    @Override
+    protected void fillParamForStatement(PreparedStatement preparedStatement, User<Integer> entity, boolean isCart) throws SQLException {
+        preparedStatement.setString(1, entity.getFirstName());
+        preparedStatement.setString(2, entity.getLastName());
+        preparedStatement.setString(3, entity.getUsername());
+        preparedStatement.setString(4, entity.getPassword());
+        preparedStatement.setString(5, entity.getEmail());
+        preparedStatement.setString(6, entity.getMobileNumber());
+
+    }
+
+    @Override
+    protected String getCountOfQuestionMarkForParams() {
+        return "(?,?,?,?,?,?)";
+    }
+
+    @Override
+    protected String getColumnName() {
+        return "(firstName, lastName, username, password, email, mobileNumber)";
+    }
+
+    @Override
+    protected String getTableName() {
+        return "users";
+    }
+
+    @Override
+    public User<Integer> login(String username) throws SQLException {
+        String sql = "SELECT * FROM users WHERE username=?";
+        try (PreparedStatement preparedStatement = getConnection().prepareStatement(sql)) {
+            preparedStatement.setString(1,username);
+            ResultSet resultSet = preparedStatement.executeQuery();
+            if (resultSet.next()) {
+               return mapResultsetToEntity(resultSet);
+            }
+        }
+        return null;
+    }
+
+    private User<Integer> mapResultsetToEntity(ResultSet resultSet) throws SQLException {
+        User<Integer> user = new User<>(resultSet.getInt(1),
+                resultSet.getString(2),
+                resultSet.getString(3),
+                resultSet.getString(4),
+                resultSet.getString(5),
+                resultSet.getString(6),
+                resultSet.getString(7));
+        user.setId(resultSet.getInt(1));
+        return user;
+    }
+}
Index: src/main/java/ir/oopjdbcgeneric/domain/enumeration/ElectricApplianceType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/domain/enumeration/ElectricApplianceType.java b/src/main/java/ir/oopjdbcgeneric/domain/enumeration/ElectricApplianceType.java
new file mode 100644
--- /dev/null	(date 1696268541584)
+++ b/src/main/java/ir/oopjdbcgeneric/domain/enumeration/ElectricApplianceType.java	(date 1696268541584)
@@ -0,0 +1,22 @@
+package ir.oopjdbcgeneric.domain.enumeration;
+
+
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+
+@Getter
+@NoArgsConstructor
+public enum ElectricApplianceType {
+    radio("radio", 300),
+    laptop("laptop", 1200),
+    mobile("mobile", 1000);
+
+    private String name;
+    private double price;
+
+    ElectricApplianceType(String name, double price) {
+        this.name = name;
+        this.price = price;
+    }
+
+}
Index: src/main/java/ir/oopjdbcgeneric/domain/enumeration/ShoesType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ir/oopjdbcgeneric/domain/enumeration/ShoesType.java b/src/main/java/ir/oopjdbcgeneric/domain/enumeration/ShoesType.java
new file mode 100644
--- /dev/null	(date 1696261057845)
+++ b/src/main/java/ir/oopjdbcgeneric/domain/enumeration/ShoesType.java	(date 1696261057845)
@@ -0,0 +1,23 @@
+package ir.oopjdbcgeneric.domain.enumeration;
+
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+
+@Getter
+@AllArgsConstructor
+public enum ShoesType {
+    sport("sport",200),
+    formal("formal",150),
+    boot("boot",250),
+    heels("heels",300);
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    private String name;
+    private  double price;
+
+
+
+}
